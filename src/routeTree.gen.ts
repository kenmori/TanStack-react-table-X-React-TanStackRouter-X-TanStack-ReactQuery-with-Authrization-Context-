/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/tasks'
import { Route as ManageImport } from './routes/manage'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as R404Import } from './routes/__404'
import { Route as TasksIndexImport } from './routes/tasks/index'
import { Route as TableIndexImport } from './routes/table/index'
import { Route as TasksTaskIdImport } from './routes/tasks/$taskId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TasksRoute = TasksImport.update({
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any)

const ManageRoute = ManageImport.update({
  path: '/manage',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/__404',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TasksIndexRoute = TasksIndexImport.update({
  path: '/',
  getParentRoute: () => TasksRoute,
} as any)

const TableIndexRoute = TableIndexImport.update({
  path: '/table/',
  getParentRoute: () => rootRoute,
} as any)

const TasksTaskIdRoute = TasksTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => TasksRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__404': {
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/manage': {
      preLoaderRoute: typeof ManageImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
    '/tasks/$taskId': {
      preLoaderRoute: typeof TasksTaskIdImport
      parentRoute: typeof TasksImport
    }
    '/table/': {
      preLoaderRoute: typeof TableIndexImport
      parentRoute: typeof rootRoute
    }
    '/tasks/': {
      preLoaderRoute: typeof TasksIndexImport
      parentRoute: typeof TasksImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  R404Route,
  AboutRoute,
  LoginRoute,
  ManageRoute,
  TasksRoute.addChildren([TasksTaskIdRoute, TasksIndexRoute]),
  TableIndexRoute,
])

/* prettier-ignore-end */
